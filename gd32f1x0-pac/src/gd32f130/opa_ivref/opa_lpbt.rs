# [ doc = "Reader of register OPA_LPBT" ] pub type R = crate :: R < u32 , super :: OPA_LPBT > ; # [ doc = "Writer for register OPA_LPBT" ] pub type W = crate :: W < u32 , super :: OPA_LPBT > ; # [ doc = "Register OPA_LPBT `reset()`'s with value 0" ] impl crate :: ResetValue for super :: OPA_LPBT { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `OA0_TRIM_LP_LOW`" ] pub type OA0_TRIM_LP_LOW_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `OA0_TRIM_LP_LOW`" ] pub struct OA0_TRIM_LP_LOW_W < 'a > { w : & 'a mut W , } impl < 'a > OA0_TRIM_LP_LOW_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0x1f ) | ( ( value as u32 ) & 0x1f ) ; self . w } } # [ doc = "Reader of field `OA0_TRIM_LP_HIGH`" ] pub type OA0_TRIM_LP_HIGH_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `OA0_TRIM_LP_HIGH`" ] pub struct OA0_TRIM_LP_HIGH_W < 'a > { w : & 'a mut W , } impl < 'a > OA0_TRIM_LP_HIGH_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x1f << 5 ) ) | ( ( ( value as u32 ) & 0x1f ) << 5 ) ; self . w } } # [ doc = "Reader of field `OA1_TRIM_LP_LOW`" ] pub type OA1_TRIM_LP_LOW_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `OA1_TRIM_LP_LOW`" ] pub struct OA1_TRIM_LP_LOW_W < 'a > { w : & 'a mut W , } impl < 'a > OA1_TRIM_LP_LOW_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x1f << 10 ) ) | ( ( ( value as u32 ) & 0x1f ) << 10 ) ; self . w } } # [ doc = "Reader of field `OA1_TRIM_LP_HIGH`" ] pub type OA1_TRIM_LP_HIGH_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `OA1_TRIM_LP_HIGH`" ] pub struct OA1_TRIM_LP_HIGH_W < 'a > { w : & 'a mut W , } impl < 'a > OA1_TRIM_LP_HIGH_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x1f << 15 ) ) | ( ( ( value as u32 ) & 0x1f ) << 15 ) ; self . w } } # [ doc = "Reader of field `OA2_TRIM_LP_LOW`" ] pub type OA2_TRIM_LP_LOW_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `OA2_TRIM_LP_LOW`" ] pub struct OA2_TRIM_LP_LOW_W < 'a > { w : & 'a mut W , } impl < 'a > OA2_TRIM_LP_LOW_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x1f << 20 ) ) | ( ( ( value as u32 ) & 0x1f ) << 20 ) ; self . w } } # [ doc = "Reader of field `OA2_TRIM_LP_HIGH`" ] pub type OA2_TRIM_LP_HIGH_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `OA2_TRIM_LP_HIGH`" ] pub struct OA2_TRIM_LP_HIGH_W < 'a > { w : & 'a mut W , } impl < 'a > OA2_TRIM_LP_HIGH_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x1f << 25 ) ) | ( ( ( value as u32 ) & 0x1f ) << 25 ) ; self . w } } impl R { # [ doc = "Bits 0:4 - OPA0, low power mode 5-bit offset trim value for PMOS pairs" ] # [ inline ( always ) ] pub fn oa0_trim_lp_low ( & self ) -> OA0_TRIM_LP_LOW_R { OA0_TRIM_LP_LOW_R :: new ( ( self . bits & 0x1f ) as u8 ) } # [ doc = "Bits 5:9 - OPA0, low power mode 5-bit offset trim value for NMOS pairs" ] # [ inline ( always ) ] pub fn oa0_trim_lp_high ( & self ) -> OA0_TRIM_LP_HIGH_R { OA0_TRIM_LP_HIGH_R :: new ( ( ( self . bits >> 5 ) & 0x1f ) as u8 ) } # [ doc = "Bits 10:14 - OPA1, low power mode 5-bit offset trim value for PMOS pairs" ] # [ inline ( always ) ] pub fn oa1_trim_lp_low ( & self ) -> OA1_TRIM_LP_LOW_R { OA1_TRIM_LP_LOW_R :: new ( ( ( self . bits >> 10 ) & 0x1f ) as u8 ) } # [ doc = "Bits 15:19 - OPA1, low power mode 5-bit offset trim value for NMOS pairs" ] # [ inline ( always ) ] pub fn oa1_trim_lp_high ( & self ) -> OA1_TRIM_LP_HIGH_R { OA1_TRIM_LP_HIGH_R :: new ( ( ( self . bits >> 15 ) & 0x1f ) as u8 ) } # [ doc = "Bits 20:24 - OPA2, low power mode 5-bit offset trim value for PMOS pairs" ] # [ inline ( always ) ] pub fn oa2_trim_lp_low ( & self ) -> OA2_TRIM_LP_LOW_R { OA2_TRIM_LP_LOW_R :: new ( ( ( self . bits >> 20 ) & 0x1f ) as u8 ) } # [ doc = "Bits 25:29 - OPA2, low power mode 5-bit offset trim value for NMOS pairs" ] # [ inline ( always ) ] pub fn oa2_trim_lp_high ( & self ) -> OA2_TRIM_LP_HIGH_R { OA2_TRIM_LP_HIGH_R :: new ( ( ( self . bits >> 25 ) & 0x1f ) as u8 ) } } impl W { # [ doc = "Bits 0:4 - OPA0, low power mode 5-bit offset trim value for PMOS pairs" ] # [ inline ( always ) ] pub fn oa0_trim_lp_low ( & mut self ) -> OA0_TRIM_LP_LOW_W { OA0_TRIM_LP_LOW_W { w : self } } # [ doc = "Bits 5:9 - OPA0, low power mode 5-bit offset trim value for NMOS pairs" ] # [ inline ( always ) ] pub fn oa0_trim_lp_high ( & mut self ) -> OA0_TRIM_LP_HIGH_W { OA0_TRIM_LP_HIGH_W { w : self } } # [ doc = "Bits 10:14 - OPA1, low power mode 5-bit offset trim value for PMOS pairs" ] # [ inline ( always ) ] pub fn oa1_trim_lp_low ( & mut self ) -> OA1_TRIM_LP_LOW_W { OA1_TRIM_LP_LOW_W { w : self } } # [ doc = "Bits 15:19 - OPA1, low power mode 5-bit offset trim value for NMOS pairs" ] # [ inline ( always ) ] pub fn oa1_trim_lp_high ( & mut self ) -> OA1_TRIM_LP_HIGH_W { OA1_TRIM_LP_HIGH_W { w : self } } # [ doc = "Bits 20:24 - OPA2, low power mode 5-bit offset trim value for PMOS pairs" ] # [ inline ( always ) ] pub fn oa2_trim_lp_low ( & mut self ) -> OA2_TRIM_LP_LOW_W { OA2_TRIM_LP_LOW_W { w : self } } # [ doc = "Bits 25:29 - OPA2, low power mode 5-bit offset trim value for NMOS pairs" ] # [ inline ( always ) ] pub fn oa2_trim_lp_high ( & mut self ) -> OA2_TRIM_LP_HIGH_W { OA2_TRIM_LP_HIGH_W { w : self } } }