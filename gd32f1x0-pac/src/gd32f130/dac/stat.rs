# [ doc = "Reader of register STAT" ] pub type R = crate :: R < u32 , super :: STAT > ; # [ doc = "Writer for register STAT" ] pub type W = crate :: W < u32 , super :: STAT > ; # [ doc = "Register STAT `reset()`'s with value 0" ] impl crate :: ResetValue for super :: STAT { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `DDUDR0`" ] pub type DDUDR0_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `DDUDR0`" ] pub struct DDUDR0_W < 'a > { w : & 'a mut W , } impl < 'a > DDUDR0_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 13 ) ) | ( ( ( value as u32 ) & 0x01 ) << 13 ) ; self . w } } # [ doc = "Reader of field `DDUDR1`" ] pub type DDUDR1_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `DDUDR1`" ] pub struct DDUDR1_W < 'a > { w : & 'a mut W , } impl < 'a > DDUDR1_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 29 ) ) | ( ( ( value as u32 ) & 0x01 ) << 29 ) ; self . w } } impl R { # [ doc = "Bit 13 - DAC0 DMA underrun flag" ] # [ inline ( always ) ] pub fn ddudr0 ( & self ) -> DDUDR0_R { DDUDR0_R :: new ( ( ( self . bits >> 13 ) & 0x01 ) != 0 ) } # [ doc = "Bit 29 - DAC1 DMA underrun flag" ] # [ inline ( always ) ] pub fn ddudr1 ( & self ) -> DDUDR1_R { DDUDR1_R :: new ( ( ( self . bits >> 29 ) & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 13 - DAC0 DMA underrun flag" ] # [ inline ( always ) ] pub fn ddudr0 ( & mut self ) -> DDUDR0_W { DDUDR0_W { w : self } } # [ doc = "Bit 29 - DAC1 DMA underrun flag" ] # [ inline ( always ) ] pub fn ddudr1 ( & mut self ) -> DDUDR1_W { DDUDR1_W { w : self } } }