# [ doc = "Reader of register INTEN" ] pub type R = crate :: R < u32 , super :: INTEN > ; # [ doc = "Writer for register INTEN" ] pub type W = crate :: W < u32 , super :: INTEN > ; # [ doc = "Register INTEN `reset()`'s with value 0" ] impl crate :: ResetValue for super :: INTEN { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `TAERRIE`" ] pub type TAERRIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `TAERRIE`" ] pub struct TAERRIE_W < 'a > { w : & 'a mut W , } impl < 'a > TAERRIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 12 ) ) | ( ( ( value as u32 ) & 0x01 ) << 12 ) ; self . w } } # [ doc = "Reader of field `TERRIE`" ] pub type TERRIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `TERRIE`" ] pub struct TERRIE_W < 'a > { w : & 'a mut W , } impl < 'a > TERRIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 11 ) ) | ( ( ( value as u32 ) & 0x01 ) << 11 ) ; self . w } } # [ doc = "Reader of field `TUIE`" ] pub type TUIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `TUIE`" ] pub struct TUIE_W < 'a > { w : & 'a mut W , } impl < 'a > TUIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 10 ) ) | ( ( ( value as u32 ) & 0x01 ) << 10 ) ; self . w } } # [ doc = "Reader of field `TXENDIE`" ] pub type TXENDIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `TXENDIE`" ] pub struct TXENDIE_W < 'a > { w : & 'a mut W , } impl < 'a > TXENDIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 9 ) ) | ( ( ( value as u32 ) & 0x01 ) << 9 ) ; self . w } } # [ doc = "Reader of field `TBRIE`" ] pub type TBRIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `TBRIE`" ] pub struct TBRIE_W < 'a > { w : & 'a mut W , } impl < 'a > TBRIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 8 ) ) | ( ( ( value as u32 ) & 0x01 ) << 8 ) ; self . w } } # [ doc = "Reader of field `LSTARBIE`" ] pub type LSTARBIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `LSTARBIE`" ] pub struct LSTARBIE_W < 'a > { w : & 'a mut W , } impl < 'a > LSTARBIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 7 ) ) | ( ( ( value as u32 ) & 0x01 ) << 7 ) ; self . w } } # [ doc = "Reader of field `RAEIE`" ] pub type RAEIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `RAEIE`" ] pub struct RAEIE_W < 'a > { w : & 'a mut W , } impl < 'a > RAEIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 6 ) ) | ( ( ( value as u32 ) & 0x01 ) << 6 ) ; self . w } } # [ doc = "Reader of field `RLBPEIE`" ] pub type RLBPEIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `RLBPEIE`" ] pub struct RLBPEIE_W < 'a > { w : & 'a mut W , } impl < 'a > RLBPEIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 5 ) ) | ( ( ( value as u32 ) & 0x01 ) << 5 ) ; self . w } } # [ doc = "Reader of field `RSBPEIE`" ] pub type RSBPEIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `RSBPEIE`" ] pub struct RSBPEIE_W < 'a > { w : & 'a mut W , } impl < 'a > RSBPEIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 4 ) ) | ( ( ( value as u32 ) & 0x01 ) << 4 ) ; self . w } } # [ doc = "Reader of field `RBREIE`" ] pub type RBREIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `RBREIE`" ] pub struct RBREIE_W < 'a > { w : & 'a mut W , } impl < 'a > RBREIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 3 ) ) | ( ( ( value as u32 ) & 0x01 ) << 3 ) ; self . w } } # [ doc = "Reader of field `ROIE`" ] pub type ROIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `ROIE`" ] pub struct ROIE_W < 'a > { w : & 'a mut W , } impl < 'a > ROIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 2 ) ) | ( ( ( value as u32 ) & 0x01 ) << 2 ) ; self . w } } # [ doc = "Reader of field `RENDIE`" ] pub type RENDIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `RENDIE`" ] pub struct RENDIE_W < 'a > { w : & 'a mut W , } impl < 'a > RENDIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 1 ) ) | ( ( ( value as u32 ) & 0x01 ) << 1 ) ; self . w } } # [ doc = "Reader of field `RBRIE`" ] pub type RBRIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `RBRIE`" ] pub struct RBRIE_W < 'a > { w : & 'a mut W , } impl < 'a > RBRIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0x01 ) | ( ( value as u32 ) & 0x01 ) ; self . w } } impl R { # [ doc = "Bit 12 - TAERR Interrupt Enable" ] # [ inline ( always ) ] pub fn taerrie ( & self ) -> TAERRIE_R { TAERRIE_R :: new ( ( ( self . bits >> 12 ) & 0x01 ) != 0 ) } # [ doc = "Bit 11 - TERR Interrupt Enable" ] # [ inline ( always ) ] pub fn terrie ( & self ) -> TERRIE_R { TERRIE_R :: new ( ( ( self . bits >> 11 ) & 0x01 ) != 0 ) } # [ doc = "Bit 10 - TU Interrupt Enable" ] # [ inline ( always ) ] pub fn tuie ( & self ) -> TUIE_R { TUIE_R :: new ( ( ( self . bits >> 10 ) & 0x01 ) != 0 ) } # [ doc = "Bit 9 - TEND Interrupt Enable" ] # [ inline ( always ) ] pub fn txendie ( & self ) -> TXENDIE_R { TXENDIE_R :: new ( ( ( self . bits >> 9 ) & 0x01 ) != 0 ) } # [ doc = "Bit 8 - TBR Interrupt Enable" ] # [ inline ( always ) ] pub fn tbrie ( & self ) -> TBRIE_R { TBRIE_R :: new ( ( ( self . bits >> 8 ) & 0x01 ) != 0 ) } # [ doc = "Bit 7 - ALRLST Interrupt Enable" ] # [ inline ( always ) ] pub fn lstarbie ( & self ) -> LSTARBIE_R { LSTARBIE_R :: new ( ( ( self . bits >> 7 ) & 0x01 ) != 0 ) } # [ doc = "Bit 6 - RAE Interrupt Enable" ] # [ inline ( always ) ] pub fn raeie ( & self ) -> RAEIE_R { RAEIE_R :: new ( ( ( self . bits >> 6 ) & 0x01 ) != 0 ) } # [ doc = "Bit 5 - RLBPE Interrupt Enable" ] # [ inline ( always ) ] pub fn rlbpeie ( & self ) -> RLBPEIE_R { RLBPEIE_R :: new ( ( ( self . bits >> 5 ) & 0x01 ) != 0 ) } # [ doc = "Bit 4 - RSBPE Interrupt Enable" ] # [ inline ( always ) ] pub fn rsbpeie ( & self ) -> RSBPEIE_R { RSBPEIE_R :: new ( ( ( self . bits >> 4 ) & 0x01 ) != 0 ) } # [ doc = "Bit 3 - RBRE Interrupt Enable" ] # [ inline ( always ) ] pub fn rbreie ( & self ) -> RBREIE_R { RBREIE_R :: new ( ( ( self . bits >> 3 ) & 0x01 ) != 0 ) } # [ doc = "Bit 2 - RO Interrupt Enable" ] # [ inline ( always ) ] pub fn roie ( & self ) -> ROIE_R { ROIE_R :: new ( ( ( self . bits >> 2 ) & 0x01 ) != 0 ) } # [ doc = "Bit 1 - REND Interrupt Enable" ] # [ inline ( always ) ] pub fn rendie ( & self ) -> RENDIE_R { RENDIE_R :: new ( ( ( self . bits >> 1 ) & 0x01 ) != 0 ) } # [ doc = "Bit 0 - RBR Interrupt Enable" ] # [ inline ( always ) ] pub fn rbrie ( & self ) -> RBRIE_R { RBRIE_R :: new ( ( self . bits & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 12 - TAERR Interrupt Enable" ] # [ inline ( always ) ] pub fn taerrie ( & mut self ) -> TAERRIE_W { TAERRIE_W { w : self } } # [ doc = "Bit 11 - TERR Interrupt Enable" ] # [ inline ( always ) ] pub fn terrie ( & mut self ) -> TERRIE_W { TERRIE_W { w : self } } # [ doc = "Bit 10 - TU Interrupt Enable" ] # [ inline ( always ) ] pub fn tuie ( & mut self ) -> TUIE_W { TUIE_W { w : self } } # [ doc = "Bit 9 - TEND Interrupt Enable" ] # [ inline ( always ) ] pub fn txendie ( & mut self ) -> TXENDIE_W { TXENDIE_W { w : self } } # [ doc = "Bit 8 - TBR Interrupt Enable" ] # [ inline ( always ) ] pub fn tbrie ( & mut self ) -> TBRIE_W { TBRIE_W { w : self } } # [ doc = "Bit 7 - ALRLST Interrupt Enable" ] # [ inline ( always ) ] pub fn lstarbie ( & mut self ) -> LSTARBIE_W { LSTARBIE_W { w : self } } # [ doc = "Bit 6 - RAE Interrupt Enable" ] # [ inline ( always ) ] pub fn raeie ( & mut self ) -> RAEIE_W { RAEIE_W { w : self } } # [ doc = "Bit 5 - RLBPE Interrupt Enable" ] # [ inline ( always ) ] pub fn rlbpeie ( & mut self ) -> RLBPEIE_W { RLBPEIE_W { w : self } } # [ doc = "Bit 4 - RSBPE Interrupt Enable" ] # [ inline ( always ) ] pub fn rsbpeie ( & mut self ) -> RSBPEIE_W { RSBPEIE_W { w : self } } # [ doc = "Bit 3 - RBRE Interrupt Enable" ] # [ inline ( always ) ] pub fn rbreie ( & mut self ) -> RBREIE_W { RBREIE_W { w : self } } # [ doc = "Bit 2 - RO Interrupt Enable" ] # [ inline ( always ) ] pub fn roie ( & mut self ) -> ROIE_W { ROIE_W { w : self } } # [ doc = "Bit 1 - REND Interrupt Enable" ] # [ inline ( always ) ] pub fn rendie ( & mut self ) -> RENDIE_W { RENDIE_W { w : self } } # [ doc = "Bit 0 - RBR Interrupt Enable" ] # [ inline ( always ) ] pub fn rbrie ( & mut self ) -> RBRIE_W { RBRIE_W { w : self } } }