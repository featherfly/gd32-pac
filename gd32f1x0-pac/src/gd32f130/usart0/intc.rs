# [ doc = "Writer for register INTC" ] pub type W = crate :: W < u32 , super :: INTC > ; # [ doc = "Register INTC `reset()`'s with value 0" ] impl crate :: ResetValue for super :: INTC { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Write proxy for field `WUC`" ] pub struct WUC_W < 'a > { w : & 'a mut W , } impl < 'a > WUC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 20 ) ) | ( ( ( value as u32 ) & 0x01 ) << 20 ) ; self . w } } # [ doc = "Write proxy for field `AMC`" ] pub struct AMC_W < 'a > { w : & 'a mut W , } impl < 'a > AMC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 17 ) ) | ( ( ( value as u32 ) & 0x01 ) << 17 ) ; self . w } } # [ doc = "Write proxy for field `EBC`" ] pub struct EBC_W < 'a > { w : & 'a mut W , } impl < 'a > EBC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 12 ) ) | ( ( ( value as u32 ) & 0x01 ) << 12 ) ; self . w } } # [ doc = "Write proxy for field `RTC`" ] pub struct RTC_W < 'a > { w : & 'a mut W , } impl < 'a > RTC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 11 ) ) | ( ( ( value as u32 ) & 0x01 ) << 11 ) ; self . w } } # [ doc = "Write proxy for field `CTSC`" ] pub struct CTSC_W < 'a > { w : & 'a mut W , } impl < 'a > CTSC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 9 ) ) | ( ( ( value as u32 ) & 0x01 ) << 9 ) ; self . w } } # [ doc = "Write proxy for field `LBDC`" ] pub struct LBDC_W < 'a > { w : & 'a mut W , } impl < 'a > LBDC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 8 ) ) | ( ( ( value as u32 ) & 0x01 ) << 8 ) ; self . w } } # [ doc = "Write proxy for field `TCC`" ] pub struct TCC_W < 'a > { w : & 'a mut W , } impl < 'a > TCC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 6 ) ) | ( ( ( value as u32 ) & 0x01 ) << 6 ) ; self . w } } # [ doc = "Write proxy for field `IDLEC`" ] pub struct IDLEC_W < 'a > { w : & 'a mut W , } impl < 'a > IDLEC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 4 ) ) | ( ( ( value as u32 ) & 0x01 ) << 4 ) ; self . w } } # [ doc = "Write proxy for field `OREC`" ] pub struct OREC_W < 'a > { w : & 'a mut W , } impl < 'a > OREC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 3 ) ) | ( ( ( value as u32 ) & 0x01 ) << 3 ) ; self . w } } # [ doc = "Write proxy for field `NEC`" ] pub struct NEC_W < 'a > { w : & 'a mut W , } impl < 'a > NEC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 2 ) ) | ( ( ( value as u32 ) & 0x01 ) << 2 ) ; self . w } } # [ doc = "Write proxy for field `FEC`" ] pub struct FEC_W < 'a > { w : & 'a mut W , } impl < 'a > FEC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 1 ) ) | ( ( ( value as u32 ) & 0x01 ) << 1 ) ; self . w } } # [ doc = "Write proxy for field `PEC`" ] pub struct PEC_W < 'a > { w : & 'a mut W , } impl < 'a > PEC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0x01 ) | ( ( value as u32 ) & 0x01 ) ; self . w } } impl W { # [ doc = "Bit 20 - Wakeup from Deep-sleep mode clear" ] # [ inline ( always ) ] pub fn wuc ( & mut self ) -> WUC_W { WUC_W { w : self } } # [ doc = "Bit 17 - ADDR match clear" ] # [ inline ( always ) ] pub fn amc ( & mut self ) -> AMC_W { AMC_W { w : self } } # [ doc = "Bit 12 - End of timeout clear" ] # [ inline ( always ) ] pub fn ebc ( & mut self ) -> EBC_W { EBC_W { w : self } } # [ doc = "Bit 11 - Receiver timeout clear flag" ] # [ inline ( always ) ] pub fn rtc ( & mut self ) -> RTC_W { RTC_W { w : self } } # [ doc = "Bit 9 - CTS change clear" ] # [ inline ( always ) ] pub fn ctsc ( & mut self ) -> CTSC_W { CTSC_W { w : self } } # [ doc = "Bit 8 - LIN break detected clear" ] # [ inline ( always ) ] pub fn lbdc ( & mut self ) -> LBDC_W { LBDC_W { w : self } } # [ doc = "Bit 6 - Transmission complete clear flag" ] # [ inline ( always ) ] pub fn tcc ( & mut self ) -> TCC_W { TCC_W { w : self } } # [ doc = "Bit 4 - Idle line detected clear" ] # [ inline ( always ) ] pub fn idlec ( & mut self ) -> IDLEC_W { IDLEC_W { w : self } } # [ doc = "Bit 3 - Overrun error clear flag" ] # [ inline ( always ) ] pub fn orec ( & mut self ) -> OREC_W { OREC_W { w : self } } # [ doc = "Bit 2 - Noise detected clear" ] # [ inline ( always ) ] pub fn nec ( & mut self ) -> NEC_W { NEC_W { w : self } } # [ doc = "Bit 1 - Framing error clear flag" ] # [ inline ( always ) ] pub fn fec ( & mut self ) -> FEC_W { FEC_W { w : self } } # [ doc = "Bit 0 - Parity error clear flag" ] # [ inline ( always ) ] pub fn pec ( & mut self ) -> PEC_W { PEC_W { w : self } } }