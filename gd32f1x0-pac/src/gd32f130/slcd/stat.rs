# [ doc = "Reader of register STAT" ] pub type R = crate :: R < u32 , super :: STAT > ; # [ doc = "Writer for register STAT" ] pub type W = crate :: W < u32 , super :: STAT > ; # [ doc = "Register STAT `reset()`'s with value 0x20" ] impl crate :: ResetValue for super :: STAT { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0x20 } } # [ doc = "Reader of field `ONF`" ] pub type ONF_R = crate :: R < bool , bool > ; # [ doc = "Reader of field `SOF`" ] pub type SOF_R = crate :: R < bool , bool > ; # [ doc = "Reader of field `UPRF`" ] pub type UPRF_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `UPRF`" ] pub struct UPRF_W < 'a > { w : & 'a mut W , } impl < 'a > UPRF_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 2 ) ) | ( ( ( value as u32 ) & 0x01 ) << 2 ) ; self . w } } # [ doc = "Reader of field `UPDF`" ] pub type UPDF_R = crate :: R < bool , bool > ; # [ doc = "Reader of field `VRDYF`" ] pub type VRDYF_R = crate :: R < bool , bool > ; # [ doc = "Reader of field `SYNF`" ] pub type SYNF_R = crate :: R < bool , bool > ; impl R { # [ doc = "Bit 0 - SLCD controller on flag" ] # [ inline ( always ) ] pub fn onf ( & self ) -> ONF_R { ONF_R :: new ( ( self . bits & 0x01 ) != 0 ) } # [ doc = "Bit 1 - Start of frame flag" ] # [ inline ( always ) ] pub fn sof ( & self ) -> SOF_R { SOF_R :: new ( ( ( self . bits >> 1 ) & 0x01 ) != 0 ) } # [ doc = "Bit 2 - Update SLCD data request flag" ] # [ inline ( always ) ] pub fn uprf ( & self ) -> UPRF_R { UPRF_R :: new ( ( ( self . bits >> 2 ) & 0x01 ) != 0 ) } # [ doc = "Bit 3 - Update SLCD data done flag" ] # [ inline ( always ) ] pub fn updf ( & self ) -> UPDF_R { UPDF_R :: new ( ( ( self . bits >> 3 ) & 0x01 ) != 0 ) } # [ doc = "Bit 4 - SLCD voltage ready flag" ] # [ inline ( always ) ] pub fn vrdyf ( & self ) -> VRDYF_R { VRDYF_R :: new ( ( ( self . bits >> 4 ) & 0x01 ) != 0 ) } # [ doc = "Bit 5 - SLCD_CFG register synchronization flag" ] # [ inline ( always ) ] pub fn synf ( & self ) -> SYNF_R { SYNF_R :: new ( ( ( self . bits >> 5 ) & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 2 - Update SLCD data request flag" ] # [ inline ( always ) ] pub fn uprf ( & mut self ) -> UPRF_W { UPRF_W { w : self } } }