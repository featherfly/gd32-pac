# [ doc = "Reader of register CTL" ] pub type R = crate :: R < u32 , super :: CTL > ; # [ doc = "Writer for register CTL" ] pub type W = crate :: W < u32 , super :: CTL > ; # [ doc = "Register CTL `reset()`'s with value 0" ] impl crate :: ResetValue for super :: CTL { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `SLCDON`" ] pub type SLCDON_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `SLCDON`" ] pub struct SLCDON_W < 'a > { w : & 'a mut W , } impl < 'a > SLCDON_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0x01 ) | ( ( value as u32 ) & 0x01 ) ; self . w } } # [ doc = "Reader of field `VSRC`" ] pub type VSRC_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `VSRC`" ] pub struct VSRC_W < 'a > { w : & 'a mut W , } impl < 'a > VSRC_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 1 ) ) | ( ( ( value as u32 ) & 0x01 ) << 1 ) ; self . w } } # [ doc = "Reader of field `DUTY`" ] pub type DUTY_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `DUTY`" ] pub struct DUTY_W < 'a > { w : & 'a mut W , } impl < 'a > DUTY_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x07 << 2 ) ) | ( ( ( value as u32 ) & 0x07 ) << 2 ) ; self . w } } # [ doc = "Reader of field `BIAS`" ] pub type BIAS_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `BIAS`" ] pub struct BIAS_W < 'a > { w : & 'a mut W , } impl < 'a > BIAS_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x03 << 5 ) ) | ( ( ( value as u32 ) & 0x03 ) << 5 ) ; self . w } } # [ doc = "Reader of field `COMS`" ] pub type COMS_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `COMS`" ] pub struct COMS_W < 'a > { w : & 'a mut W , } impl < 'a > COMS_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 7 ) ) | ( ( ( value as u32 ) & 0x01 ) << 7 ) ; self . w } } impl R { # [ doc = "Bit 0 - SLCD controller start" ] # [ inline ( always ) ] pub fn slcdon ( & self ) -> SLCDON_R { SLCDON_R :: new ( ( self . bits & 0x01 ) != 0 ) } # [ doc = "Bit 1 - SLCD voltage source" ] # [ inline ( always ) ] pub fn vsrc ( & self ) -> VSRC_R { VSRC_R :: new ( ( ( self . bits >> 1 ) & 0x01 ) != 0 ) } # [ doc = "Bits 2:4 - Duty select" ] # [ inline ( always ) ] pub fn duty ( & self ) -> DUTY_R { DUTY_R :: new ( ( ( self . bits >> 2 ) & 0x07 ) as u8 ) } # [ doc = "Bits 5:6 - Bias select" ] # [ inline ( always ) ] pub fn bias ( & self ) -> BIAS_R { BIAS_R :: new ( ( ( self . bits >> 5 ) & 0x03 ) as u8 ) } # [ doc = "Bit 7 - Common/segment padselect" ] # [ inline ( always ) ] pub fn coms ( & self ) -> COMS_R { COMS_R :: new ( ( ( self . bits >> 7 ) & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 0 - SLCD controller start" ] # [ inline ( always ) ] pub fn slcdon ( & mut self ) -> SLCDON_W { SLCDON_W { w : self } } # [ doc = "Bit 1 - SLCD voltage source" ] # [ inline ( always ) ] pub fn vsrc ( & mut self ) -> VSRC_W { VSRC_W { w : self } } # [ doc = "Bits 2:4 - Duty select" ] # [ inline ( always ) ] pub fn duty ( & mut self ) -> DUTY_W { DUTY_W { w : self } } # [ doc = "Bits 5:6 - Bias select" ] # [ inline ( always ) ] pub fn bias ( & mut self ) -> BIAS_W { BIAS_W { w : self } } # [ doc = "Bit 7 - Common/segment padselect" ] # [ inline ( always ) ] pub fn coms ( & mut self ) -> COMS_W { COMS_W { w : self } } }