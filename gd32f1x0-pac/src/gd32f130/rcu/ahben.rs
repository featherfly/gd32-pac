# [ doc = "Reader of register AHBEN" ] pub type R = crate :: R < u32 , super :: AHBEN > ; # [ doc = "Writer for register AHBEN" ] pub type W = crate :: W < u32 , super :: AHBEN > ; # [ doc = "Register AHBEN `reset()`'s with value 0x14" ] impl crate :: ResetValue for super :: AHBEN { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0x14 } } # [ doc = "Reader of field `DMAEN`" ] pub type DMAEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `DMAEN`" ] pub struct DMAEN_W < 'a > { w : & 'a mut W , } impl < 'a > DMAEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0x01 ) | ( ( value as u32 ) & 0x01 ) ; self . w } } # [ doc = "Reader of field `SRAMEN`" ] pub type SRAMEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `SRAMEN`" ] pub struct SRAMEN_W < 'a > { w : & 'a mut W , } impl < 'a > SRAMEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 2 ) ) | ( ( ( value as u32 ) & 0x01 ) << 2 ) ; self . w } } # [ doc = "Reader of field `FMCEN`" ] pub type FMCEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `FMCEN`" ] pub struct FMCEN_W < 'a > { w : & 'a mut W , } impl < 'a > FMCEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 4 ) ) | ( ( ( value as u32 ) & 0x01 ) << 4 ) ; self . w } } # [ doc = "Reader of field `CRCEN`" ] pub type CRCEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `CRCEN`" ] pub struct CRCEN_W < 'a > { w : & 'a mut W , } impl < 'a > CRCEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 6 ) ) | ( ( ( value as u32 ) & 0x01 ) << 6 ) ; self . w } } # [ doc = "Reader of field `PAEN`" ] pub type PAEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `PAEN`" ] pub struct PAEN_W < 'a > { w : & 'a mut W , } impl < 'a > PAEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 17 ) ) | ( ( ( value as u32 ) & 0x01 ) << 17 ) ; self . w } } # [ doc = "Reader of field `PBEN`" ] pub type PBEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `PBEN`" ] pub struct PBEN_W < 'a > { w : & 'a mut W , } impl < 'a > PBEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 18 ) ) | ( ( ( value as u32 ) & 0x01 ) << 18 ) ; self . w } } # [ doc = "Reader of field `PCEN`" ] pub type PCEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `PCEN`" ] pub struct PCEN_W < 'a > { w : & 'a mut W , } impl < 'a > PCEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 19 ) ) | ( ( ( value as u32 ) & 0x01 ) << 19 ) ; self . w } } # [ doc = "Reader of field `PDEN`" ] pub type PDEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `PDEN`" ] pub struct PDEN_W < 'a > { w : & 'a mut W , } impl < 'a > PDEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 20 ) ) | ( ( ( value as u32 ) & 0x01 ) << 20 ) ; self . w } } # [ doc = "Reader of field `PFEN`" ] pub type PFEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `PFEN`" ] pub struct PFEN_W < 'a > { w : & 'a mut W , } impl < 'a > PFEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 22 ) ) | ( ( ( value as u32 ) & 0x01 ) << 22 ) ; self . w } } # [ doc = "Reader of field `TSIEN`" ] pub type TSIEN_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `TSIEN`" ] pub struct TSIEN_W < 'a > { w : & 'a mut W , } impl < 'a > TSIEN_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 24 ) ) | ( ( ( value as u32 ) & 0x01 ) << 24 ) ; self . w } } impl R { # [ doc = "Bit 0 - DMA clock enable" ] # [ inline ( always ) ] pub fn dmaen ( & self ) -> DMAEN_R { DMAEN_R :: new ( ( self . bits & 0x01 ) != 0 ) } # [ doc = "Bit 2 - SRAM interface clock enable" ] # [ inline ( always ) ] pub fn sramen ( & self ) -> SRAMEN_R { SRAMEN_R :: new ( ( ( self . bits >> 2 ) & 0x01 ) != 0 ) } # [ doc = "Bit 4 - FMC clock enable" ] # [ inline ( always ) ] pub fn fmcen ( & self ) -> FMCEN_R { FMCEN_R :: new ( ( ( self . bits >> 4 ) & 0x01 ) != 0 ) } # [ doc = "Bit 6 - CRC clock enable" ] # [ inline ( always ) ] pub fn crcen ( & self ) -> CRCEN_R { CRCEN_R :: new ( ( ( self . bits >> 6 ) & 0x01 ) != 0 ) } # [ doc = "Bit 17 - GPIO port A clock enable" ] # [ inline ( always ) ] pub fn paen ( & self ) -> PAEN_R { PAEN_R :: new ( ( ( self . bits >> 17 ) & 0x01 ) != 0 ) } # [ doc = "Bit 18 - GPIO port B clock enable" ] # [ inline ( always ) ] pub fn pben ( & self ) -> PBEN_R { PBEN_R :: new ( ( ( self . bits >> 18 ) & 0x01 ) != 0 ) } # [ doc = "Bit 19 - GPIO port C clock enable" ] # [ inline ( always ) ] pub fn pcen ( & self ) -> PCEN_R { PCEN_R :: new ( ( ( self . bits >> 19 ) & 0x01 ) != 0 ) } # [ doc = "Bit 20 - GPIO port D clock enable" ] # [ inline ( always ) ] pub fn pden ( & self ) -> PDEN_R { PDEN_R :: new ( ( ( self . bits >> 20 ) & 0x01 ) != 0 ) } # [ doc = "Bit 22 - GPIO port F clock enable" ] # [ inline ( always ) ] pub fn pfen ( & self ) -> PFEN_R { PFEN_R :: new ( ( ( self . bits >> 22 ) & 0x01 ) != 0 ) } # [ doc = "Bit 24 - TSI clock enable" ] # [ inline ( always ) ] pub fn tsien ( & self ) -> TSIEN_R { TSIEN_R :: new ( ( ( self . bits >> 24 ) & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 0 - DMA clock enable" ] # [ inline ( always ) ] pub fn dmaen ( & mut self ) -> DMAEN_W { DMAEN_W { w : self } } # [ doc = "Bit 2 - SRAM interface clock enable" ] # [ inline ( always ) ] pub fn sramen ( & mut self ) -> SRAMEN_W { SRAMEN_W { w : self } } # [ doc = "Bit 4 - FMC clock enable" ] # [ inline ( always ) ] pub fn fmcen ( & mut self ) -> FMCEN_W { FMCEN_W { w : self } } # [ doc = "Bit 6 - CRC clock enable" ] # [ inline ( always ) ] pub fn crcen ( & mut self ) -> CRCEN_W { CRCEN_W { w : self } } # [ doc = "Bit 17 - GPIO port A clock enable" ] # [ inline ( always ) ] pub fn paen ( & mut self ) -> PAEN_W { PAEN_W { w : self } } # [ doc = "Bit 18 - GPIO port B clock enable" ] # [ inline ( always ) ] pub fn pben ( & mut self ) -> PBEN_W { PBEN_W { w : self } } # [ doc = "Bit 19 - GPIO port C clock enable" ] # [ inline ( always ) ] pub fn pcen ( & mut self ) -> PCEN_W { PCEN_W { w : self } } # [ doc = "Bit 20 - GPIO port D clock enable" ] # [ inline ( always ) ] pub fn pden ( & mut self ) -> PDEN_W { PDEN_W { w : self } } # [ doc = "Bit 22 - GPIO port F clock enable" ] # [ inline ( always ) ] pub fn pfen ( & mut self ) -> PFEN_W { PFEN_W { w : self } } # [ doc = "Bit 24 - TSI clock enable" ] # [ inline ( always ) ] pub fn tsien ( & mut self ) -> TSIEN_W { TSIEN_W { w : self } } }