# [ doc = "Reader of register CFG3" ] pub type R = crate :: R < u32 , super :: CFG3 > ; # [ doc = "Writer for register CFG3" ] pub type W = crate :: W < u32 , super :: CFG3 > ; # [ doc = "Register CFG3 `reset()`'s with value 0" ] impl crate :: ResetValue for super :: CFG3 { type Type = u32 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `CKOUT1SRC`" ] pub type CKOUT1SRC_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `CKOUT1SRC`" ] pub struct CKOUT1SRC_W < 'a > { w : & 'a mut W , } impl < 'a > CKOUT1SRC_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! 0x07 ) | ( ( value as u32 ) & 0x07 ) ; self . w } } # [ doc = "Reader of field `CKOUT1DIV`" ] pub type CKOUT1DIV_R = crate :: R < u8 , u8 > ; # [ doc = "Write proxy for field `CKOUT1DIV`" ] pub struct CKOUT1DIV_W < 'a > { w : & 'a mut W , } impl < 'a > CKOUT1DIV_W < 'a > { # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub unsafe fn bits ( self , value : u8 ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x3f << 8 ) ) | ( ( ( value as u32 ) & 0x3f ) << 8 ) ; self . w } } impl R { # [ doc = "Bits 0:2 - CKOUT1 Clock Source Selection" ] # [ inline ( always ) ] pub fn ckout1src ( & self ) -> CKOUT1SRC_R { CKOUT1SRC_R :: new ( ( self . bits & 0x07 ) as u8 ) } # [ doc = "Bits 8:13 - The CK_OUT1 divider which the CK_OUT1 frequency can be reduced see bits 2:0 of RCU_CFG3 for CK_OUT1" ] # [ inline ( always ) ] pub fn ckout1div ( & self ) -> CKOUT1DIV_R { CKOUT1DIV_R :: new ( ( ( self . bits >> 8 ) & 0x3f ) as u8 ) } } impl W { # [ doc = "Bits 0:2 - CKOUT1 Clock Source Selection" ] # [ inline ( always ) ] pub fn ckout1src ( & mut self ) -> CKOUT1SRC_W { CKOUT1SRC_W { w : self } } # [ doc = "Bits 8:13 - The CK_OUT1 divider which the CK_OUT1 frequency can be reduced see bits 2:0 of RCU_CFG3 for CK_OUT1" ] # [ inline ( always ) ] pub fn ckout1div ( & mut self ) -> CKOUT1DIV_W { CKOUT1DIV_W { w : self } } }