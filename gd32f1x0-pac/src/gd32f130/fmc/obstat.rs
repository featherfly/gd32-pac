# [ doc = "Reader of register OBSTAT" ] pub type R = crate :: R < u32 , super :: OBSTAT > ; # [ doc = "Reader of field `OB_DATA`" ] pub type OB_DATA_R = crate :: R < u16 , u16 > ; # [ doc = "Reader of field `OB_USER`" ] pub type OB_USER_R = crate :: R < u8 , u8 > ; # [ doc = "Reader of field `PLEVEL`" ] pub type PLEVEL_R = crate :: R < u8 , u8 > ; # [ doc = "Reader of field `OBER`" ] pub type OBER_R = crate :: R < bool , bool > ; impl R { # [ doc = "Bits 16:31 - Store OB_DATA\\[15:0\\]
of option byte block after system reset" ] # [ inline ( always ) ] pub fn ob_data ( & self ) -> OB_DATA_R { OB_DATA_R :: new ( ( ( self . bits >> 16 ) & 0xffff ) as u16 ) } # [ doc = "Bits 8:15 - Store OB_USER byte of option byte block after system reset" ] # [ inline ( always ) ] pub fn ob_user ( & self ) -> OB_USER_R { OB_USER_R :: new ( ( ( self . bits >> 8 ) & 0xff ) as u8 ) } # [ doc = "Bits 1:2 - Security Protection level" ] # [ inline ( always ) ] pub fn plevel ( & self ) -> PLEVEL_R { PLEVEL_R :: new ( ( ( self . bits >> 1 ) & 0x03 ) as u8 ) } # [ doc = "Bit 0 - Option byte read error" ] # [ inline ( always ) ] pub fn ober ( & self ) -> OBER_R { OBER_R :: new ( ( self . bits & 0x01 ) != 0 ) } }