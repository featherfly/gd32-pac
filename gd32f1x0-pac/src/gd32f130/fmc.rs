# [ doc = r"Register block" ] # [ repr ( C ) ] pub struct RegisterBlock { # [ doc = "0x00 - Wait state register" ] pub ws : WS , # [ doc = "0x04 - Flash unlock key register" ] pub key : KEY , # [ doc = "0x08 - Flash option byte unlock key register" ] pub obkey : OBKEY , # [ doc = "0x0c - Flash status register" ] pub stat : STAT , # [ doc = "0x10 - Flash control register" ] pub ctl : CTL , # [ doc = "0x14 - Flash address register" ] pub addr : ADDR , _reserved6 : [ u8 ; 4usize ] , # [ doc = "0x1c - Option byte status register" ] pub obstat : OBSTAT , # [ doc = "0x20 - Write protection register" ] pub wp : WP , _reserved8 : [ u8 ; 216usize ] , # [ doc = "0xfc - Flash wait state control register" ] pub wsen : WSEN , # [ doc = "0x100 - Flash Product ID register" ] pub pid : PID , } # [ doc = "Wait state register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [ws](ws) module" ] pub type WS = crate :: Reg < u32 , _WS > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _WS ; # [ doc = "`read()` method returns [ws::R](ws::R) reader structure" ] impl crate :: Readable for WS { } # [ doc = "`write(|w| ..)` method takes [ws::W](ws::W) writer structure" ] impl crate :: Writable for WS { } # [ doc = "Wait state register" ] pub mod ws ; # [ doc = "Flash unlock key register\n\nThis register you can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [key](key) module" ] pub type KEY = crate :: Reg < u32 , _KEY > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _KEY ; # [ doc = "`write(|w| ..)` method takes [key::W](key::W) writer structure" ] impl crate :: Writable for KEY { } # [ doc = "Flash unlock key register" ] pub mod key ; # [ doc = "Flash option byte unlock key register\n\nThis register you can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [obkey](obkey) module" ] pub type OBKEY = crate :: Reg < u32 , _OBKEY > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _OBKEY ; # [ doc = "`write(|w| ..)` method takes [obkey::W](obkey::W) writer structure" ] impl crate :: Writable for OBKEY { } # [ doc = "Flash option byte unlock key register" ] pub mod obkey ; # [ doc = "Flash status register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [stat](stat) module" ] pub type STAT = crate :: Reg < u32 , _STAT > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _STAT ; # [ doc = "`read()` method returns [stat::R](stat::R) reader structure" ] impl crate :: Readable for STAT { } # [ doc = "`write(|w| ..)` method takes [stat::W](stat::W) writer structure" ] impl crate :: Writable for STAT { } # [ doc = "Flash status register" ] pub mod stat ; # [ doc = "Flash control register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [ctl](ctl) module" ] pub type CTL = crate :: Reg < u32 , _CTL > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _CTL ; # [ doc = "`read()` method returns [ctl::R](ctl::R) reader structure" ] impl crate :: Readable for CTL { } # [ doc = "`write(|w| ..)` method takes [ctl::W](ctl::W) writer structure" ] impl crate :: Writable for CTL { } # [ doc = "Flash control register" ] pub mod ctl ; # [ doc = "Flash address register\n\nThis register you can [`read`](crate::generic::Reg::read), [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero), [`modify`](crate::generic::Reg::modify). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [addr](addr) module" ] pub type ADDR = crate :: Reg < u32 , _ADDR > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _ADDR ; # [ doc = "`read()` method returns [addr::R](addr::R) reader structure" ] impl crate :: Readable for ADDR { } # [ doc = "`write(|w| ..)` method takes [addr::W](addr::W) writer structure" ] impl crate :: Writable for ADDR { } # [ doc = "Flash address register" ] pub mod addr ; # [ doc = "Option byte status register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [obstat](obstat) module" ] pub type OBSTAT = crate :: Reg < u32 , _OBSTAT > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _OBSTAT ; # [ doc = "`read()` method returns [obstat::R](obstat::R) reader structure" ] impl crate :: Readable for OBSTAT { } # [ doc = "Option byte status register" ] pub mod obstat ; # [ doc = "Write protection register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [wp](wp) module" ] pub type WP = crate :: Reg < u32 , _WP > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _WP ; # [ doc = "`read()` method returns [wp::R](wp::R) reader structure" ] impl crate :: Readable for WP { } # [ doc = "Write protection register" ] pub mod wp ; # [ doc = "Flash wait state control register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [wsen](wsen) module" ] pub type WSEN = crate :: Reg < u32 , _WSEN > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _WSEN ; # [ doc = "`read()` method returns [wsen::R](wsen::R) reader structure" ] impl crate :: Readable for WSEN { } # [ doc = "Flash wait state control register" ] pub mod wsen ; # [ doc = "Flash Product ID register\n\nThis register you can [`read`](crate::generic::Reg::read). See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [pid](pid) module" ] pub type PID = crate :: Reg < u32 , _PID > ; # [ allow ( missing_docs ) ] # [ doc ( hidden ) ] pub struct _PID ; # [ doc = "`read()` method returns [pid::R](pid::R) reader structure" ] impl crate :: Readable for PID { } # [ doc = "Flash Product ID register" ] pub mod pid ;