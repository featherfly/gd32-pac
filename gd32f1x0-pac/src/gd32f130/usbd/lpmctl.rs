# [ doc = "Reader of register LPMCTL" ] pub type R = crate :: R < u16 , super :: LPMCTL > ; # [ doc = "Writer for register LPMCTL" ] pub type W = crate :: W < u16 , super :: LPMCTL > ; # [ doc = "Register LPMCTL `reset()`'s with value 0" ] impl crate :: ResetValue for super :: LPMCTL { type Type = u16 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `LPMSTIE`" ] pub type LPMSTIE_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `LPMSTIE`" ] pub struct LPMSTIE_W < 'a > { w : & 'a mut W , } impl < 'a > LPMSTIE_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 15 ) ) | ( ( ( value as u16 ) & 0x01 ) << 15 ) ; self . w } } impl R { # [ doc = "Bit 15 - LPM token successful transfer interrupt enable" ] # [ inline ( always ) ] pub fn lpmstie ( & self ) -> LPMSTIE_R { LPMSTIE_R :: new ( ( ( self . bits >> 15 ) & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 15 - LPM token successful transfer interrupt enable" ] # [ inline ( always ) ] pub fn lpmstie ( & mut self ) -> LPMSTIE_W { LPMSTIE_W { w : self } } }