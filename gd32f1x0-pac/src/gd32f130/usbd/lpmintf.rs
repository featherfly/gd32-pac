# [ doc = "Reader of register LPMINTF" ] pub type R = crate :: R < u16 , super :: LPMINTF > ; # [ doc = "Writer for register LPMINTF" ] pub type W = crate :: W < u16 , super :: LPMINTF > ; # [ doc = "Register LPMINTF `reset()`'s with value 0" ] impl crate :: ResetValue for super :: LPMINTF { type Type = u16 ; # [ inline ( always ) ] fn reset_value ( ) -> Self :: Type { 0 } } # [ doc = "Reader of field `LPMSTIF`" ] pub type LPMSTIF_R = crate :: R < bool , bool > ; # [ doc = "Write proxy for field `LPMSTIF`" ] pub struct LPMSTIF_W < 'a > { w : & 'a mut W , } impl < 'a > LPMSTIF_W < 'a > { # [ doc = r"Sets the field bit" ] # [ inline ( always ) ] pub fn set_bit ( self ) -> & 'a mut W { self . bit ( true ) } # [ doc = r"Clears the field bit" ] # [ inline ( always ) ] pub fn clear_bit ( self ) -> & 'a mut W { self . bit ( false ) } # [ doc = r"Writes raw bits to the field" ] # [ inline ( always ) ] pub fn bit ( self , value : bool ) -> & 'a mut W { self . w . bits = ( self . w . bits & ! ( 0x01 << 15 ) ) | ( ( ( value as u16 ) & 0x01 ) << 15 ) ; self . w } } impl R { # [ doc = "Bit 15 - LPM token Correct transfer interrupt flag" ] # [ inline ( always ) ] pub fn lpmstif ( & self ) -> LPMSTIF_R { LPMSTIF_R :: new ( ( ( self . bits >> 15 ) & 0x01 ) != 0 ) } } impl W { # [ doc = "Bit 15 - LPM token Correct transfer interrupt flag" ] # [ inline ( always ) ] pub fn lpmstif ( & mut self ) -> LPMSTIF_W { LPMSTIF_W { w : self } } }