# [ doc = "Reader of register PHYCTL" ] pub type R = crate :: R < u32 , super :: PHYCTL > ; # [ doc = "Reader of field `POMOD`" ] pub type POMOD_R = crate :: R < u8 , u8 > ; # [ doc = "Reader of field `PHYEN`" ] pub type PHYEN_R = crate :: R < bool , bool > ; impl R { # [ doc = "Bits 8:9 - CAN PHY output driver control" ] # [ inline ( always ) ] pub fn pomod ( & self ) -> POMOD_R { POMOD_R :: new ( ( ( self . bits >> 8 ) & 0x03 ) as u8 ) } # [ doc = "Bit 0 - PHY enable bit" ] # [ inline ( always ) ] pub fn phyen ( & self ) -> PHYEN_R { PHYEN_R :: new ( ( self . bits & 0x01 ) != 0 ) } }